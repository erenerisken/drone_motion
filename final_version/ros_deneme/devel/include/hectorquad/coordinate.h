// Generated by gencpp from file hectorquad/coordinate.msg
// DO NOT EDIT!


#ifndef HECTORQUAD_MESSAGE_COORDINATE_H
#define HECTORQUAD_MESSAGE_COORDINATE_H

#include <ros/service_traits.h>


#include <hectorquad/coordinateRequest.h>
#include <hectorquad/coordinateResponse.h>


namespace hectorquad
{

struct coordinate
{

typedef coordinateRequest Request;
typedef coordinateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct coordinate
} // namespace hectorquad


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hectorquad::coordinate > {
  static const char* value()
  {
    return "a38af3d78614d732759538d0aaa23c7b";
  }

  static const char* value(const ::hectorquad::coordinate&) { return value(); }
};

template<>
struct DataType< ::hectorquad::coordinate > {
  static const char* value()
  {
    return "hectorquad/coordinate";
  }

  static const char* value(const ::hectorquad::coordinate&) { return value(); }
};


// service_traits::MD5Sum< ::hectorquad::coordinateRequest> should match 
// service_traits::MD5Sum< ::hectorquad::coordinate > 
template<>
struct MD5Sum< ::hectorquad::coordinateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hectorquad::coordinate >::value();
  }
  static const char* value(const ::hectorquad::coordinateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hectorquad::coordinateRequest> should match 
// service_traits::DataType< ::hectorquad::coordinate > 
template<>
struct DataType< ::hectorquad::coordinateRequest>
{
  static const char* value()
  {
    return DataType< ::hectorquad::coordinate >::value();
  }
  static const char* value(const ::hectorquad::coordinateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hectorquad::coordinateResponse> should match 
// service_traits::MD5Sum< ::hectorquad::coordinate > 
template<>
struct MD5Sum< ::hectorquad::coordinateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hectorquad::coordinate >::value();
  }
  static const char* value(const ::hectorquad::coordinateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hectorquad::coordinateResponse> should match 
// service_traits::DataType< ::hectorquad::coordinate > 
template<>
struct DataType< ::hectorquad::coordinateResponse>
{
  static const char* value()
  {
    return DataType< ::hectorquad::coordinate >::value();
  }
  static const char* value(const ::hectorquad::coordinateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HECTORQUAD_MESSAGE_COORDINATE_H
